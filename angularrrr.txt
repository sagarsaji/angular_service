
//team.service.ts

import { Player } from '../players/player.model';

import { EventEmitter } from '@angular/core';




export class TeamService {

  teamChanged = new EventEmitter<Player[]>();

  playerId: number;




  private team: Player[] = [];




  getTeam() {

    return this.team.slice();

  }




  /*

    Should edit a player of given id to nwPlayer

  */

  editPlayer(id: number, nwPlayer: Player) {

    const pi = this.team.findIndex(player=>player.id===id);

    this.team[pi]=nwPlayer;

    this.teamChanged.next(this.team.slice());

  }




  /*

    Should add a player to team, if the player

    already exist alert "This Player already exist in your team !!"

  */

  addPlayer(player: Player) {

    const pi = this.team.find(playr=>playr.id===player.id)
	if(pi){
		alert("This player already exist in your team !!");
		
	}
	else{
		this.team.push(player);
		this.playerChanged.emit(this.getPlayer());
	}


  }




  /*

    Should delete a player from team

  */

  deletePlayer(id: number) {

    const pi = this.team.findIndex(player=>player.id===id);

    this.team.splice(pi,1);

  }




  /*

    Returns error messages if a team does not have exactly 2 batsmen

    2 bowlers and 1 wicket-keeper

  */

  getStatus() {

     var status: string[] = [];

     let c1=0,c2=0,c3=0;

     this.team.forEach(player=>{

      if(player.description==='Batsman')

      c1++;

      if(player.description==='Bowlers')

      c2++;

      if(player.description==='Wicket Keeper')

      c3++;

     })

     if(c1<2)

     status.push('You do not have required number of batsmen in your team');

     if(c2<2)

     status.push('You do not have required number of bowler in your team');

     if(c3<1)

     status.push('You do not have required number of wicket-keeper in your team');

     return status;

  }

}

















//player.service.ts



import { Player } from './player.model';

import { Injectable } from '@angular/core';

import { Subject } from 'rxjs';




@Injectable()

export class PlayerService {

  playersChanged = new Subject<Player[]>();

  count: number = 7;

  private players: Player[] = [

    new Player(1, 'M S Dhoni', 'Wicket Keeper'),

    new Player(2, 'Virat Kohli', 'Batsman'),

    new Player(3, 'Jasprit Bumrah', 'Bowler'),

    new Player(4, 'Rohit Sharma', 'Batsman'),

    new Player(5, 'Rishabh Pant', 'Wicket Keeper'),

    new Player(6, 'T. Natarajan', 'Bowler'),

    new Player(7, 'R Ashwin', 'Bowler'),

  ];




  getPlayers() {

    return this.players.slice();

  }




  generateID() {

    this.count = this.count + 1;

    return this.count;

  }





  /*

    Returns the player for a given player id

  */

  getPlayer(id: number) {

    const pi=this.players.find(player=>player.id===id)

    console.log(this.players[id]," ",pi)

    return pi;

  }




  /*

    Adds the player to player list

  */

  addPlayer(player: Player) {

    player.id=this.generateID();

    this.players.push(player);

    this.playersChanged.emit(this.getPlayers());

  }




  /*

    Updates the player given the index and new changed values

  */

  updatePlayer(id: number, newPlayer: Player) {

    const pi=this.players.findIndex(players=>players.id===id)

    this.players[pi]=newPlayer;

    this.playersChanged.emit(this.getPlayer());

  }




  /*

    Deletes a player from player list

  */

  deletePlayer(id: number) {

    const pi=this.players.findIndex(player=>player.id===id)

    this.players.splice(pi,1);

    console.log('player deleted at index ',index)

    this.playersChanged.emit(this.players.slice());

  }

}